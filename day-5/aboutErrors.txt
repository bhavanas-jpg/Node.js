In node.js applications , mostly all the errors belong to one of the mentioned categories :

1.Standard javascript errors :
< URI > error : This error is thrown when a global URI handling function is misued.
< Eval > error : This error is thrown when the call to eval() fails.
< Type > error : This is a subclass of error which shows that the argument provided is not of allowed type.
for e.g. passing an object where a string is expected would be considered a TypeError.
< Range > error : This is a subclass of error which shows that the argument provided was not within the range of acceptable values.
< Syntax > error : This is a subclass of error which indicates that the code written is not of valid Javascript.
< Reference > error : This is a subclass of error which signifies that an attempt is made to access a variable which is not defined. These are very common typos or broken code .

2.System errors : This type of errors are generated when the exception occurs during the run time of the program. They are generated when the application violated some constraints of operating system.
Properties of system errors :
error.code : This is a string which represents and error code. some common examples include EACCES , EADDRINUSE , ECONNREFUSED , etc .
error.port : This is a number which represents the connection's port which is unavailable.
error.address : This is a string which represents the address to which the connection failed.
error.path : This is a string which represents the relevant invalid pathname .
error.syscall : This is a string which represents the failed syscall .
error.errno : This property can be a number or a string. If number , the value will be negative which corresponds to the error code. If string , it is same as error.code .

3.User-specified errors : This type of errors are generated by application code.

4.Assertion errors : This type of errors are raised by assert . This type of errors are special case of errors which occurs when an exceptional logic violation is detected in node.js that should never occur.